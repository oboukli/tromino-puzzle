name: Microsoft C++ Code Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: 43 12 * * 2

env:
  build: ${{ github.workspace }}
  config: Debug

permissions: {}

jobs:
  analyze:
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Analyze
    runs-on: windows-latest

    env:
      VCPKG_BINARY_SOURCES: clear;x-gha,readwrite

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Check out vcpkg
        uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          path: ${{ github.workspace }}\vcpkg
          persist-credentials: false

        - name: Export GitHub Actions cache environment variables
          uses: actions/github-script@v7
          with:
            script: |-
              core.exportVariable(
                'ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || ''
              );
              core.exportVariable(
                'ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || ''
              );

      - name: Bootstrap vcpkg
        run: .\vcpkg\bootstrap-vcpkg.bat -disableMetrics

      - name: Install Vcpkg packages
        run: |-
          vcpkg install nameof --triplet x64-windows
          vcpkg install nanobench --triplet x64-windows
        working-directory: vcpkg

      - name: Configure CMake
        run: cmake -B ${{ env.build }} -DCMAKE_BUILD_TYPE=${{ env.config }}

      - name: Initialize MSVC Code Analysis
        uses: microsoft/msvc-code-analysis-action@v0
        id: run-analysis
        with:
          buildConfiguration: ${{ env.config }}
          cmakeBuildDirectory: ${{ env.build }}
          ruleset: NativeRecommendedRules.ruleset

      - name: Upload result to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.run-analysis.outputs.sarif }}

      - name: Upload result as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: sarif-file
          path: ${{ steps.run-analysis.outputs.sarif }}
