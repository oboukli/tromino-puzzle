name: SonarCloud scan

on:
  pull_request:
  push:
  schedule:
    - cron: 10 22 * * 5
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    env:
      SONAR_SCANNER_VERSION: 4.7.0.2747
      SONAR_SERVER_URL: https://sonarcloud.io
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
      COVERAGE_REPORTS_PATH: ${{ github.workspace }}/coverage.xml

    steps:
      - name: Update dependency list
        run: sudo apt-get update

      - name: Install dependencies
        run: >-
          sudo apt-get install
          --assume-yes
          --quiet
          autoconf-archive
          gcovr
          libboost-test-dev
          libsdl2-dev

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: microsoft

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: sonarscanner_cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: >-
          mkdir --parents $HOME/.sonar

          curl
          --silent
          --show-error
          --location
          --output $HOME/.sonar/sonar-scanner.zip
          ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}

          unzip
          -o $HOME/.sonar/sonar-scanner.zip
          -d $HOME/.sonar/

          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin"
          >> $GITHUB_PATH

      - name: Download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: >-
          curl
          --silent
          --show-error
          --location
          --output $HOME/.sonar/build-wrapper-linux-x86.zip
          ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}

          unzip
          -o $HOME/.sonar/build-wrapper-linux-x86.zip
          -d $HOME/.sonar/

          echo "$HOME/.sonar/build-wrapper-linux-x86"
          >> $GITHUB_PATH

      - name: Run build-wrapper
        run: >-
          ./autogen.sh

          ./configure --enable-code-coverage

          build-wrapper-linux-x86-64
          --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }}
          make clean all check

      - name: Run tromino
        run: ./src/tromino 2> /dev/null || true

      - name: Run tromino 5 0 0
        run: ./src/tromino 5 0 0 2> /dev/null || true

      - name: Run tromino 4 2 3
        run: ./src/tromino 4 2 3

      - name: Run gcovr
        run: >-
          gcovr
          --exclude=./test
          --exclude=/usr/include
          --keep
          --root .
          --sonarqube ${{ env.COVERAGE_REPORTS_PATH }}

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >-
          sonar-scanner
          --define sonar.host.url="${{ env.SONAR_SERVER_URL }}"
          --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
          --define sonar.coverageReportPaths="${{ env.COVERAGE_REPORTS_PATH }}"
