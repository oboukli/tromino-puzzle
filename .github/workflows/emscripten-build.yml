name: Emscripten build for WebAssembly

on:
  pull_request:
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Check out Emscripten repository
        uses: actions/checkout@v3
        with:
          repository: emscripten-core/emsdk
          path: emsdk

      - name: Emscripten SDK cache
        id: emscripten-sdk-cache
        uses: actions/cache@v2
        with:
          path: |
            emsdk/node
            emsdk/upstream
          key: >-
            emscripten-sdk-cache-${{ hashFiles(
              'emsdk/upstream/emscripten/emscripten-revision.txt'
            ) }}

      - name: Install Emscripten SDK
        env:
          EMSDK_VERSION: 3.1.8
        run: |
          ./emsdk install ${EMSDK_VERSION}
          ./emsdk activate ${EMSDK_VERSION}
        working-directory: emsdk

      - name: Check out main repository
        uses: actions/checkout@v3
        with:
          path: tromino-puzzle

      - name: Make
        run: |
          source ${{ github.workspace }}/emsdk/emsdk_env.sh
          emmake make -j $((($(nproc) * 15) / 10))
        working-directory: tromino-puzzle/emscripten

      - name: Archive web app artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tromino-puzzle-web-dist
          path: tromino-puzzle/dist/web

  deploy-gh-pages:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Check out GitHub Pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages

      - name: Remove current files
        run: rm -rf *

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: tromino-puzzle-web-dist

      - name: Display file structure
        run: ls -R

      - name: Git status
        run: git status

      - name: Publish web app to GitHub Pages
        run: |
          if [[ $(git diff --stat) != '' ]]; then
            git config --global user.name 'Continuous Deployment Job'
            git config --global user.email 'oboukli@users.noreply.github.com'
            git add --all
            git commit --amend --all --date=now --message= 'Automated deployment'
            git push --force
          else
            echo 'No web app changes found. Publish step skipped.'
          fi
