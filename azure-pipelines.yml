# Copyright (c) 2021-2022 Omar Boukli-Hacene. All rights reserved.
# Distributed under an MIT-style license that can be
# found in the LICENSE file.

# SPDX-License-Identifier: MIT

trigger:
  - main
  - development
  - feature/*

jobs:
  - job: macOS
    displayName: 'Build for macOS'
    pool:
      vmImage: 'macOS-latest'
    variables:
      configuration: Release
      scheme: 'TrominoCli'
      sdk: macosx
    steps:
      - task: Xcode@5
        displayName: 'Build'
        inputs:
          actions: 'build'
          xcWorkspacePath: 'xcode/TrominoPuzzle.xcworkspace'
          scheme: '$(scheme)'
          configuration: '$(configuration)'
          xcodeVersion: '13'
          destinationPlatformOption: 'macOS'
          packageApp: false

  - job: Windows
    displayName: 'Build for Windows'
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: VSBuild@1
        displayName: 'Build'
        inputs:
          solution: 'msbuild/TrominoPuzzle.sln'
          platform: 'x64'
          configuration: 'release'
          maximumCpuCount: true
          msbuildArchitecture: 'x64'

  - job: Linux
    displayName: 'Build for GNU/Linux'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - script: sudo apt-get update && sudo apt-get install -yq autoconf-archive libboost-test-dev libsdl2-dev
        displayName: 'Install dependencies'

      - script: ./autogen.sh
        displayName: 'Run ./autogen.sh'

      - script: mkdir build && cd build && ../configure
        displayName: 'Configure build'

      - script: make -j $(($(nproc)*15)/10)
        displayName: 'Make'
        workingDirectory: build

      - script: make check
        displayName: 'Test'
        workingDirectory: build

      - script: make dist
        displayName: 'Package'
        workingDirectory: build

      - script: make distcheck
        displayName: 'Test package'
        workingDirectory: build

  - job: WebAssembly
    displayName: 'Build for WebAssembly'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: DockerInstaller@0
        displayName: Emscripten SDK
        inputs:
          dockerVersion: 18.06.3-ce
          releaseType: stable

      - script: docker run -i --rm -v $(pwd):/src --workdir="/src/emscripten" emscripten/emsdk emmake make
        displayName: 'Emscripten build for WebAssembly'
