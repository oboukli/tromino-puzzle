trigger:
  branches:
    include:
      - "*"

resources:
  repositories:
    - repository: vcpkg
      type: github
      endpoint: oboukli
      name: microsoft/vcpkg

jobs:
  - job: macOS
    displayName: Build for macOS
    pool:
      vmImage: macOS-latest
    variables:
      configuration: Release
      scheme: TrominoCli
      sdk: macosx
    steps:
      - task: Xcode@5
        displayName: Build TrominoCli
        inputs:
          actions: build
          xcWorkspacePath: xcode/TrominoPuzzle.xcworkspace
          scheme: $(scheme)
          configuration: $(configuration)
          xcodeVersion: 13
          destinationPlatformOption: macOS
          packageApp: false

  - job: Windows
    displayName: Build for Windows
    pool:
      vmImage: windows-latest
    variables:
      primaryRepository: tromino-puzzle
    steps:
      - checkout: self
        displayName: Check out primary repository

      - checkout: vcpkg
        path: s/$(primaryRepository)/vcpkg
        displayName: Check out vcpkg repository

      - task: BatchScript@1
        displayName: Bootstrap vcpkg
        inputs:
          filename: $(primaryRepository)\vcpkg\bootstrap-vcpkg.bat
          arguments: -disableMetrics

      - script: vcpkg install --triplet x64-windows boost-test
        displayName: Install Boost.Test vcpkg package
        workingDirectory: $(primaryRepository)/vcpkg

      - script: vcpkg install --triplet x64-windows sdl2
        displayName: Install SDL2 vcpkg package
        workingDirectory: $(primaryRepository)/vcpkg

      - script: vcpkg integrate install
        displayName: Integrate vcpkg
        workingDirectory: $(primaryRepository)/vcpkg

      - task: VSBuild@1
        displayName: Build
        inputs:
          solution: $(primaryRepository)/msbuild/TrominoPuzzle.sln
          platform: x64
          configuration: Release
          maximumCpuCount: true
          msbuildArchitecture: x64

  - job: Linux
    displayName: Build for GNU/Linux
    pool:
      vmImage: ubuntu-latest
    steps:
      - script: sudo apt-get update
        displayName: Update dependency list

      - script: >-
          sudo apt-get install
          --assume-yes
          --quiet
          autoconf-archive
          libboost-test-dev
          libsdl2-dev
        displayName: Install dependencies

      - task: Bash@3
        displayName: Configure build
        inputs:
          targetType: inline
          script: |-
            ./autogen.sh
            mkdir build
            cd build
            ../configure

      - script: make --jobs=$((($(nproc) * 15) / 10))
        displayName: Make
        workingDirectory: build

      - script: make check
        displayName: Test
        workingDirectory: build

      - script: make dist
        displayName: Package
        workingDirectory: build

      - script: make distcheck
        displayName: Test package
        workingDirectory: build

  - job: WebAssembly
    displayName: Build for WebAssembly
    pool:
      vmImage: ubuntu-latest
    variables:
      emsdkVersion: 3.1.43
      numMakeJobs: 3
    steps:
      - task: DockerInstaller@0
        displayName: Install Docker
        inputs:
          dockerVersion: 24.0.4
          releaseType: stable

      - script: >-
          docker run
          --volume=$(pwd):/src
          --workdir=/src/emscripten
          emscripten/emsdk:$(emsdkVersion)
          emmake make --jobs=$(numMakeJobs)
        displayName: Build with Emscripten SDK
