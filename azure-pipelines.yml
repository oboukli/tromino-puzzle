trigger:
  batch: true
  branches:
    include:
      - "*"

resources:
  repositories:
  - repository: vcpkg
    type: github
    endpoint: oboukli
    name: microsoft/vcpkg

jobs:
  - job: macOS
    displayName: Build for macOS
    pool:
      vmImage: macOS-latest
    variables:
      configuration: Release
      scheme: TrominoCli
      sdk: macosx
    steps:
      - task: Xcode@5
        displayName: Build TrominoCli
        inputs:
          actions: build
          xcWorkspacePath: xcode/TrominoPuzzle.xcworkspace
          scheme: $(scheme)
          configuration: $(configuration)
          xcodeVersion: 13
          destinationPlatformOption: macOS
          packageApp: false

  - job: Windows
    displayName: Build for Windows
    pool:
      vmImage: windows-latest
    variables:
      primaryRepository: tromino-puzzle
    steps:
      - checkout: self
        displayName: Check out primary repository

      - checkout: vcpkg
        path: s/$(primaryRepository)/vcpkg
        displayName: Check out vcpkg repository

      - task: BatchScript@1
        displayName: Bootstrap vcpkg
        inputs:
          filename: $(primaryRepository)\vcpkg\bootstrap-vcpkg.bat

      - script: $(primaryRepository)\vcpkg\vcpkg.exe install --triplet x64-windows boost-test
        displayName: Install vcpkg packages

      - task: VSBuild@1
        displayName: Build
        inputs:
          solution: $(primaryRepository)/msbuild/TrominoPuzzle.sln
          platform: x64
          configuration: Release
          maximumCpuCount: true
          msbuildArchitecture: x64

  - job: Linux
    displayName: Build for GNU/Linux
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: Bash@3
        displayName: Install dependencies
        inputs:
          targetType: inline
          script: |
            sudo apt-get update
            sudo apt-get install --assume-yes --quiet autoconf-archive libboost-test-dev libsdl2-dev

      - task: Bash@3
        displayName: Configure build
        inputs:
          targetType: inline
          script: |
            ./autogen.sh
            mkdir build
            cd build
            ../configure

      - script: make --jobs=$((($(nproc) * 15) / 10))
        displayName: Make
        workingDirectory: build

      - script: make check
        displayName: Test
        workingDirectory: build

      - script: make dist
        displayName: Package
        workingDirectory: build

      - script: make distcheck
        displayName: Test package
        workingDirectory: build

  - job: WebAssembly
    displayName: Build for WebAssembly
    pool:
      vmImage: ubuntu-latest
    variables:
      emsdkVersion: 3.1.9
      numMakeJobs: 3
    steps:
      - task: DockerInstaller@0
        displayName: Emscripten SDK
        inputs:
          dockerVersion: 20.10.14
          releaseType: stable

      - script: docker run --volume=$(pwd):/src --workdir=/src/emscripten emscripten/emsdk:$(emsdkVersion) emmake make --jobs=$(numMakeJobs)
        displayName: Emscripten build for WebAssembly
